{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ImageScannerApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://ai.smartpaperapi.com/scan/form/image';\n    this.apiKey = '10b3213a34ef-46b5-829e-56768d30a6fb';\n  }\n  sendData(compressedBase64) {\n    const formData = new FormData();\n    const formName = 'api_form_v1';\n    formData.append('formName', formName);\n    formData.append('formImage', compressedBase64, 'compressed_image.jpg');\n    formData.append('metadata', '{}');\n    formData.append('realTimeRespType', 'simpleKeyValue');\n    return this.http.post(this.apiUrl, formData, {\n      headers: {\n        'x-api-key': this.apiKey\n      }\n    });\n  }\n}\nImageScannerApiService.ɵfac = function ImageScannerApiService_Factory(t) {\n  return new (t || ImageScannerApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nImageScannerApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageScannerApiService,\n  factory: ImageScannerApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AA0CA,OAAM,MAAOA,sBAAsB;EAIjCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,8CAA8C;IACvD,WAAM,GAAG,qCAAqC;EAEf;EAEvCC,QAAQ,CAACC,gBAAwB;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,MAAMC,QAAQ,GAAG,aAAa;IAE9BF,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAED,QAAQ,CAAC;IACrCF,QAAQ,CAACG,MAAM,CAAC,WAAW,EAAEJ,gBAAgB,EAAE,sBAAsB,CAAC;IACtEC,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;IACjCH,QAAQ,CAACG,MAAM,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;IAErD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACC,MAAM,EAAEL,QAAQ,EAAE;MAC3CM,OAAO,EAAE;QACP,WAAW,EAAE,IAAI,CAACC;;KAErB,CAAC;EACJ;;AApBWZ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAa,SAAtBb,sBAAsB;EAAAc,YAFrB;AAAM","names":["ImageScannerApiService","constructor","http","sendData","compressedBase64","formData","FormData","formName","append","post","apiUrl","headers","apiKey","factory","providedIn"],"sourceRoot":"","sources":["D:\\project angular\\smartPaperScanner\\ClientApp\\src\\app\\image-scanner-api.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { Observable} from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class ImageScannerApiService {\n\n//   private apiUrl = 'https://ai.smartpaperapi.com/scan/form/image';\n//   private apiKey = '10b3213a34ef-46b5-829e-56768d30a6fb'; \n\n//   constructor(private http : HttpClient) { }\n  \n//   sendData(imageBytes: ArrayBuffer): Observable<any> {\n//     const formData = new FormData();\n//     const formName = 'api_form_v1';\n\n//     const formImage = new Blob([imageBytes], { type: 'image/jpeg' });\n//     formData.append('formName', formName);\n//     formData.append('formImage', formImage);\n//     formData.append('metadata', '{}'); // string[optional], returned back as is when used\n//     formData.append('realTimeRespType', 'simpleKeyValue');\n\n//     return this.http.post(this.apiUrl, formData, {\n//       headers: {\n//         'x-api-key': this.apiKey, \n//       },\n//     });\n//   } \n// }\n\n/////////////////////////////////////////////\n//this code is taking compressed image and sending it to server..to http post for gettting json format\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageScannerApiService {\n  private apiUrl = 'https://ai.smartpaperapi.com/scan/form/image';\n  private apiKey = '10b3213a34ef-46b5-829e-56768d30a6fb';\n\n  constructor(private http: HttpClient) {}\n\n  sendData(compressedBase64: string): Observable<any> {\n    const formData = new FormData();\n    const formName = 'api_form_v1';\n\n    formData.append('formName', formName);\n    formData.append('formImage', compressedBase64, 'compressed_image.jpg');\n    formData.append('metadata', '{}');\n    formData.append('realTimeRespType', 'simpleKeyValue');\n\n    return this.http.post(this.apiUrl, formData, {\n      headers: {\n        'x-api-key': this.apiKey,\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}