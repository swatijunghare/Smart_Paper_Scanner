{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ImageScannerApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://ai.smartpaperapi.com/scan/form/image';\n    this.apiKey = '10b3213a34ef-46b5-829e-56768d30a6fb';\n  }\n  sendData(imageBase64) {\n    const formData = new FormData();\n    const formName = 'api_form_v1';\n    // Convert the base64 string back to a Blob\n    const byteCharacters = atob(imageBase64);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const formImage = new Blob([byteArray], {\n      type: 'image/jpeg'\n    });\n    formData.append('formName', formName);\n    formData.append('formImage', formImage, 'compressed_image.jpg');\n    formData.append('metadata', '{}');\n    formData.append('realTimeRespType', 'simpleKeyValue');\n    // Convert the Blob to a FormData entry\n    formData.forEach((value, key) => {\n      formData.delete(key);\n      formData.append(key, value);\n    });\n    return this.http.post(this.apiUrl, formData, {\n      headers: {\n        'x-api-key': this.apiKey\n      }\n    });\n  }\n}\nImageScannerApiService.ɵfac = function ImageScannerApiService_Factory(t) {\n  return new (t || ImageScannerApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nImageScannerApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageScannerApiService,\n  factory: ImageScannerApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AA0CA,OAAM,MAAOA,sBAAsB;EAIjCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,8CAA8C;IACvD,WAAM,GAAG,qCAAqC;EAEf;EAEvCC,QAAQ,CAACC,WAAmB;IAC1B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,MAAMC,QAAQ,GAAG,aAAa;IAE9B;IACA,MAAMC,cAAc,GAAGC,IAAI,CAACL,WAAW,CAAC;IACxC,MAAMM,WAAW,GAAG,IAAIC,KAAK,CAACH,cAAc,CAACI,MAAM,CAAC;IACpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC9CH,WAAW,CAACG,CAAC,CAAC,GAAGL,cAAc,CAACM,UAAU,CAACD,CAAC,CAAC;;IAE/C,MAAME,SAAS,GAAG,IAAIC,UAAU,CAACN,WAAW,CAAC;IAC7C,MAAMO,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACH,SAAS,CAAC,EAAE;MAAEI,IAAI,EAAE;IAAY,CAAE,CAAC;IAE/Dd,QAAQ,CAACe,MAAM,CAAC,UAAU,EAAEb,QAAQ,CAAC;IACrCF,QAAQ,CAACe,MAAM,CAAC,WAAW,EAAEH,SAAS,EAAE,sBAAsB,CAAC;IAC/DZ,QAAQ,CAACe,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;IACjCf,QAAQ,CAACe,MAAM,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;IAEpD;IACHf,QAAQ,CAACgB,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAI;MAC9BlB,QAAQ,CAACmB,MAAM,CAACD,GAAG,CAAC;MACpBlB,QAAQ,CAACe,MAAM,CAACG,GAAG,EAAED,KAAK,CAAC;IAC7B,CAAC,CAAC;IAEA,OAAO,IAAI,CAACpB,IAAI,CAACuB,IAAI,CAAC,IAAI,CAACC,MAAM,EAAErB,QAAQ,EAAE;MAC3CsB,OAAO,EAAE;QACP,WAAW,EAAE,IAAI,CAACC;;KAErB,CAAC;EACJ;;AAnCW5B,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAA6B,SAAtB7B,sBAAsB;EAAA8B,YAFrB;AAAM","names":["ImageScannerApiService","constructor","http","sendData","imageBase64","formData","FormData","formName","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","formImage","Blob","type","append","forEach","value","key","delete","post","apiUrl","headers","apiKey","factory","providedIn"],"sourceRoot":"","sources":["D:\\project angular\\smartPaperScanner\\ClientApp\\src\\app\\image-scanner-api.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { Observable} from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class ImageScannerApiService {\n\n//   private apiUrl = 'https://ai.smartpaperapi.com/scan/form/image';\n//   private apiKey = '10b3213a34ef-46b5-829e-56768d30a6fb'; \n\n//   constructor(private http : HttpClient) { }\n  \n//   sendData(imageBytes: ArrayBuffer): Observable<any> {\n//     const formData = new FormData();\n//     const formName = 'api_form_v1';\n\n//     const formImage = new Blob([imageBytes], { type: 'image/jpeg' });\n//     formData.append('formName', formName);\n//     formData.append('formImage', formImage);\n//     formData.append('metadata', '{}'); // string[optional], returned back as is when used\n//     formData.append('realTimeRespType', 'simpleKeyValue');\n\n//     return this.http.post(this.apiUrl, formData, {\n//       headers: {\n//         'x-api-key': this.apiKey, \n//       },\n//     });\n//   } \n// }\n\n/////////////////////////////////////////////\n//this code is taking compressed image and sending it to server..to http post for gettting json format\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageScannerApiService {\n  private apiUrl = 'https://ai.smartpaperapi.com/scan/form/image';\n  private apiKey = '10b3213a34ef-46b5-829e-56768d30a6fb';\n\n  constructor(private http: HttpClient) {}\n\n  sendData(imageBase64: string): Observable<any> {\n    const formData = new FormData();\n    const formName = 'api_form_v1';\n\n    // Convert the base64 string back to a Blob\n    const byteCharacters = atob(imageBase64);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const formImage = new Blob([byteArray], { type: 'image/jpeg' });\n\n    formData.append('formName', formName);\n    formData.append('formImage', formImage, 'compressed_image.jpg');\n    formData.append('metadata', '{}');\n    formData.append('realTimeRespType', 'simpleKeyValue');\n\n     // Convert the Blob to a FormData entry\n  formData.forEach((value, key) => {\n    formData.delete(key);\n    formData.append(key, value);\n  });\n\n    return this.http.post(this.apiUrl, formData, {\n      headers: {\n        'x-api-key': this.apiKey,\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}