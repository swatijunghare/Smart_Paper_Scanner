{"ast":null,"code":"\"use strict\";\n\n// import { Component } from '@angular/core';\n// import { ImageScannerApiService } from './image-scanner-api.service';\n// import { NgxImageCompressService } from 'ngx-image-compress';//to compress image,library from angular\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html'\n// })\n// export class AppComponent {\n//   title = 'app';\n//   selectedImage: File | null = null;\n//   constructor(\n//     private imgScannerApi: ImageScannerApiService,\n//     private imageCompress: NgxImageCompressService\n//   ) {}\n//   onFileSelected(event: any) {\n//     const files = event.target.files;\n//     this.selectedImage = files && files.length > 0 ? files[0] : null;\n//      // Log the original size of the image in KB\n//     if (this.selectedImage) {\n//       const originalSizeInBytes = this.selectedImage.size;\n//       const originalSizeInKB = originalSizeInBytes / 1024;\n//       console.log('Original Image Size:', originalSizeInKB.toFixed(2), 'KB');\n//     }\n//     // call here,if you want to compress the image here before uploading\n//     this.compressImage();\n//   }\n//   //function to compress image\n//   compressImage(): void {\n//     if (this.selectedImage) {\n//       const reader = new FileReader();\n//       reader.onload = () => {\n//         const base64String = reader.result as string;\n//         this.imageCompress\n//           .compressFile(base64String, -1, 60, 60)\n//           .then((compressedBase64: string) => {\n//             //below 4 lines code only to check size of img after compress\n//             const compressedSizeInBytes = compressedBase64.length;\n//             const compressedSizeInKB = compressedSizeInBytes / 1024;\n//             console.log('Compressed Image Size:', compressedSizeInKB.toFixed(2), 'KB');\n//             console.log('Compressed Image:', compressedBase64);\n//           })\n//           .catch((error) => {\n//             console.error('Image Compression Error:', error);\n//           });\n//       };\n//       reader.readAsDataURL(this.selectedImage);\n//     }\n//   }\n//   onUpload(): void {\n//     if (this.selectedImage) {\n//       const reader = new FileReader();\n//       reader.onloadend = () => {\n//         const imageBytes = reader.result as ArrayBuffer;\n//         this.imgScannerApi.sendData(imageBytes).subscribe({\n//           next: (response) =>{\n//             console.log('API Response:', response);\n//           },\n//          error : (error) => {\n//             console.error('API Error:', error);\n//           },\n//         });\n//       };\n//       reader.readAsArrayBuffer(this.selectedImage);\n//     }\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["D:\\project angular\\smartPaperScanner\\ClientApp\\src\\app\\app.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\r\n// import { ImageScannerApiService } from './image-scanner-api.service';\r\n// import { NgxImageCompressService } from 'ngx-image-compress';//to compress image,library from angular\r\n\r\n// @Component({\r\n//   selector: 'app-root',\r\n//   templateUrl: './app.component.html'\r\n// })\r\n// export class AppComponent {\r\n//   title = 'app';\r\n//   selectedImage: File | null = null;\r\n\r\n//   constructor(\r\n//     private imgScannerApi: ImageScannerApiService,\r\n//     private imageCompress: NgxImageCompressService\r\n//   ) {}\r\n\r\n//   onFileSelected(event: any) {\r\n//     const files = event.target.files;\r\n//     this.selectedImage = files && files.length > 0 ? files[0] : null;\r\n\r\n//      // Log the original size of the image in KB\r\n//     if (this.selectedImage) {\r\n//       const originalSizeInBytes = this.selectedImage.size;\r\n//       const originalSizeInKB = originalSizeInBytes / 1024;\r\n//       console.log('Original Image Size:', originalSizeInKB.toFixed(2), 'KB');\r\n//     }\r\n//     // call here,if you want to compress the image here before uploading\r\n//     this.compressImage();\r\n//   }\r\n\r\n//   //function to compress image\r\n//   compressImage(): void {\r\n//     if (this.selectedImage) {\r\n//       const reader = new FileReader();\r\n//       reader.onload = () => {\r\n//         const base64String = reader.result as string;\r\n//         this.imageCompress\r\n//           .compressFile(base64String, -1, 60, 60)\r\n//           .then((compressedBase64: string) => {\r\n//             //below 4 lines code only to check size of img after compress\r\n//             const compressedSizeInBytes = compressedBase64.length;\r\n//             const compressedSizeInKB = compressedSizeInBytes / 1024;\r\n//             console.log('Compressed Image Size:', compressedSizeInKB.toFixed(2), 'KB');\r\n//             console.log('Compressed Image:', compressedBase64);\r\n//           })\r\n//           .catch((error) => {\r\n//             console.error('Image Compression Error:', error);\r\n//           });\r\n//       };\r\n//       reader.readAsDataURL(this.selectedImage);\r\n//     }\r\n//   }\r\n\r\n//   onUpload(): void {\r\n//     if (this.selectedImage) {\r\n//       const reader = new FileReader();\r\n//       reader.onloadend = () => {\r\n//         const imageBytes = reader.result as ArrayBuffer;\r\n//         this.imgScannerApi.sendData(imageBytes).subscribe({\r\n//           next: (response) =>{\r\n//             console.log('API Response:', response);\r\n//           },\r\n//          error : (error) => {\r\n//             console.error('API Error:', error);\r\n//           },\r\n//         });\r\n//       };\r\n//       reader.readAsArrayBuffer(this.selectedImage);\r\n//     }\r\n//   }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}