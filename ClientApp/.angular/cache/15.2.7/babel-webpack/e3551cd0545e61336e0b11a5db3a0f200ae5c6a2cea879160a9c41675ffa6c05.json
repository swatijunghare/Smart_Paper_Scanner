{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./image-scanner-api.service\";\nimport * as i2 from \"ngx-image-compress\";\nexport class AppComponent {\n  constructor(imgScannerApi, imageCompress) {\n    this.imgScannerApi = imgScannerApi;\n    this.imageCompress = imageCompress;\n    this.title = 'app';\n    this.selectedImage = null;\n  }\n  onFileSelected(event) {\n    const files = event.target.files;\n    this.selectedImage = files && files.length > 0 ? files[0] : null;\n    // Optionally, you can compress the image here before uploading\n    this.compressImage();\n  }\n  compressImage() {\n    if (this.selectedImage) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64String = reader.result;\n        this.imageCompress.compressFile(base64String, -1, 60, 60).then(compressedImage => {\n          // compressedImage is the compressed image Blob\n          console.log('Compressed Image:', compressedImage);\n          // You can now use the compressed image for display or further processing\n        }).catch(error => {\n          console.error('Image Compression Error:', error);\n        });\n      };\n      reader.readAsDataURL(this.selectedImage);\n    }\n  }\n  onUpload() {\n    if (this.selectedImage) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const imageBytes = reader.result;\n        this.imgScannerApi.sendData(imageBytes).subscribe(response => {\n          console.log('API Response:', response);\n        }, error => {\n          console.error('API Error:', error);\n        });\n      };\n      reader.readAsArrayBuffer(this.selectedImage);\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ImageScannerApiService), i0.ɵɵdirectiveInject(i2.NgxImageCompressService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 9,\n  vars: 0,\n  consts: [[\"type\", \"file\", 3, \"change\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"body\");\n      i0.ɵɵelementStart(1, \"div\")(2, \"h3\");\n      i0.ɵɵtext(3, \"Smart Paper Scanner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"div\")(6, \"input\", 0);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_6_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_7_listener() {\n        return ctx.onUpload();\n      });\n      i0.ɵɵtext(8, \"Upload\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AA+CA,OAAM,MAAOA,YAAY;EAIvBC,YACUC,aAAqC,EACrCC,aAAsC;IADtC,kBAAa,GAAbD,aAAa;IACb,kBAAa,GAAbC,aAAa;IALvB,UAAK,GAAG,KAAK;IACb,kBAAa,GAAgB,IAAI;EAK9B;EAEHC,cAAc,CAACC,KAAU;IACvB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,IAAI,CAACE,aAAa,GAAGF,KAAK,IAAIA,KAAK,CAACG,MAAM,GAAG,CAAC,GAAGH,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;IAEhE;IACA,IAAI,CAACI,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,IAAI,CAACF,aAAa,EAAE;MACtB,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;QACnB,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAgB;QAC5C,IAAI,CAACZ,aAAa,CACfa,YAAY,CAACF,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CACtCG,IAAI,CAAEC,eAAe,IAAI;UACxB;UACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,eAAe,CAAC;UAEjD;QACF,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAI;UACfH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD,CAAC,CAAC;MACN,CAAC;MACDX,MAAM,CAACY,aAAa,CAAC,IAAI,CAACf,aAAa,CAAC;;EAE5C;EAEAgB,QAAQ;IACN,IAAI,IAAI,CAAChB,aAAa,EAAE;MACtB,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACc,SAAS,GAAG,MAAK;QACtB,MAAMC,UAAU,GAAGf,MAAM,CAACI,MAAqB;QAC/C,IAAI,CAACb,aAAa,CAACyB,QAAQ,CAACD,UAAU,CAAC,CAACE,SAAS,CAC9CC,QAAQ,IAAI;UACXV,OAAO,CAACC,GAAG,CAAC,eAAe,EAAES,QAAQ,CAAC;QACxC,CAAC,EACAP,KAAK,IAAI;UACRH,OAAO,CAACG,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QACpC,CAAC,CACF;MACH,CAAC;MACDX,MAAM,CAACmB,iBAAiB,CAAC,IAAI,CAACtB,aAAa,CAAC;;EAEhD;;AAtDWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC/CzBC,uBAKO;MACPA,2BAAK;MACCA,mCAAmB;MAAAA,iBAAK;MAC5BA,qBAAI;MACJA,2BAAK;MACgBA;QAAA,OAAUC,0BAAsB;MAAA,EAAC;MAApDD,iBAAqD;MACrDA,iCAA6B;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,sBAAM;MAAAA,iBAAS","names":["AppComponent","constructor","imgScannerApi","imageCompress","onFileSelected","event","files","target","selectedImage","length","compressImage","reader","FileReader","onload","base64String","result","compressFile","then","compressedImage","console","log","catch","error","readAsDataURL","onUpload","onloadend","imageBytes","sendData","subscribe","response","readAsArrayBuffer","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\project angular\\smartPaperScanner\\ClientApp\\src\\app\\app.component.ts","D:\\project angular\\smartPaperScanner\\ClientApp\\src\\app\\app.component.html"],"sourcesContent":["// import { Component } from '@angular/core';\r\n// import { ImageScannerApiService } from './image-scanner-api.service';\r\n\r\n// @Component({\r\n//   selector: 'app-root',\r\n//   templateUrl: './app.component.html'\r\n// })\r\n// export class AppComponent {\r\n//   title = 'app';\r\n//   selectedImage: File | null = null;\r\n//   imageBytes: ArrayBuffer | null = null;\r\n\r\n//   constructor(private imgScannerApi : ImageScannerApiService){}\r\n\r\n//   onFileSelected(event: any) {\r\n//     const files = event.target.files;\r\n//     this.selectedImage = files && files.length > 0 ? files[0] : null;\r\n//   }\r\n\r\n//   onUpload(): void {\r\n//     if (this.selectedImage) {\r\n//       const reader = new FileReader();\r\n//       reader.onloadend = () => {\r\n//         const imageBytes = reader.result as ArrayBuffer;\r\n//         this.imgScannerApi.sendData(imageBytes).subscribe(\r\n//           response => {\r\n//             console.log('API Response:', response);\r\n//           },\r\n//           error => {\r\n//             console.error('API Error:', error);\r\n//           }\r\n//         );\r\n//       };\r\n\r\n//       reader.readAsArrayBuffer(this.selectedImage);\r\n//     }\r\n//   }\r\n// }\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ImageScannerApiService } from './image-scanner-api.service';\r\nimport { NgxImageCompressService } from 'ngx-image-compress';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  selectedImage: File | null = null;\r\n\r\n  constructor(\r\n    private imgScannerApi: ImageScannerApiService,\r\n    private imageCompress: NgxImageCompressService\r\n  ) {}\r\n\r\n  onFileSelected(event: any) {\r\n    const files = event.target.files;\r\n    this.selectedImage = files && files.length > 0 ? files[0] : null;\r\n\r\n    // Optionally, you can compress the image here before uploading\r\n    this.compressImage();\r\n  }\r\n\r\n  compressImage(): void {\r\n    if (this.selectedImage) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const base64String = reader.result as string;\r\n        this.imageCompress\r\n          .compressFile(base64String, -1, 60, 60)\r\n          .then((compressedImage) => {\r\n            // compressedImage is the compressed image Blob\r\n            console.log('Compressed Image:', compressedImage);\r\n\r\n            // You can now use the compressed image for display or further processing\r\n          })\r\n          .catch((error) => {\r\n            console.error('Image Compression Error:', error);\r\n          });\r\n      };\r\n      reader.readAsDataURL(this.selectedImage);\r\n    }\r\n  }\r\n\r\n  onUpload(): void {\r\n    if (this.selectedImage) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const imageBytes = reader.result as ArrayBuffer;\r\n        this.imgScannerApi.sendData(imageBytes).subscribe(\r\n          (response) => {\r\n            console.log('API Response:', response);\r\n          },\r\n          (error) => {\r\n            console.error('API Error:', error);\r\n          }\r\n        );\r\n      };\r\n      reader.readAsArrayBuffer(this.selectedImage);\r\n    }\r\n  }\r\n}\r\n","<body>\r\n  <!-- <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div> -->\r\n</body>\r\n<div>\r\n  <h3>Smart Paper Scanner</h3>\r\n  <hr>\r\n  <div>\r\n    <input type=\"file\" (change)=\"onFileSelected($event)\">\r\n    <button (click)=\"onUpload()\">Upload</button>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}